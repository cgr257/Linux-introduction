<!DOCTYPE html>
<html>
<head>

<script type="text/javascript" src="../dd.js"></script>

<link rel='stylesheet' href='../style.css'/>
<link href='http://fonts.googleapis.com/css?family=Monofett|Josefin+Sans:400,300|Yanone+Kaffeesatz:400,200|Concert+One' rel='stylesheet' type='text/css'>
<title>TechProjects</title>




</head>

<body>

	<div id="header">
		<div id="headercontent">
			<div id="headerleft"><a class="header" href="index.htm">TechProjects</a></div>
		</div>	
	</div>

	<div id="headernav">
		<div id="headernavcontent">
			
			<!--
			The way that I would prefer to do this is to call an external file via PHP
			so that I don't have to rewrite this once for each page.

			<?php
			$headernavcontent=file_get_contents('nav.html'); 
			echo $headernavcontent
			?>

			-->



<!-- begin navigation menu -->

<ul id="sddm">
    <li><a href="../index.htm">Home</a></li>
    <li><a href="../about.htm">About</a></li>
    <li><a href="../contact.htm" 
        onmouseover="mopen('m3')" 
        onmouseout="mclosetime()">Contact</a>
        <div id="m3" 
            onmouseover="mcancelclosetime()" 
            onmouseout="mclosetime()">
        <a href="../contact.htm">General Contact Information</a>
        <a href="http://www.hirechrisg.com" target="_blank">Online Portfolio</a>
        </div></li>
    <li><a href="../projects.htm" 
        onmouseover="mopen('m4')" 
        onmouseout="mclosetime()">Projects</a>
        <div id="m4" 
            onmouseover="mcancelclosetime()" 
            onmouseout="mclosetime()">
        <a href="../linuxprojects.htm">Linux</a>        
	<a href="../lampprojects.htm">LAMP Server Administration</a>
	<a href="../networkprojects.htm">Networking</a>
        </div></li>
       
</ul>
<div style="clear:both"></div>


<!-- end navigation menu -->




			

		</div>
	</div>

	
	<div id="content">

		

<div class="morecontent">
<h1>LAMP Server Administration Project #4 - Python</h1>
<p>So far we have created a bash script that downloads an html page, then grabs urls from it, formats them and saves them to a file. Then we put that script in cron so it runs daily. Next we set up an apache web server, installed some basic web UI tools, and set up a MySQL database and table. If we're going to put those things to good use, we need more. In this project we'll write a Python script (and put it in cron) that adds the urls generated by our bash script to the table in our database.</p>

<br>

<h3>Python</h3>

<p> Python is a great language with a very simple syntax. It's the first language I ever tried to learn (though I later abandoned it [temporarily] in favor of PHP). It's easier to understand by looking at the code than some other languages, but it's still very powerful. This script will use the MySQLdb module which you might have to install</p>
<p>The first thing the script will need to do is get the date in the appropriate format, then add it to a string containing a path to the file generated by the bash script so we can point to the right file depending on what day it is. </p>

<pre>
import datetime
today=str(datetime.date.today())
filename="/var/www/news/times-news/"+today+".opinionurls.txt"
</pre>

<p>You can't add strings and objects in python, and the date is an object, so it needs to be treated like a string. That's what "str()" is for. We then declare a variable called "filename" (which is a string) that contains the location of the text file with the urls in it. I put mine under web root in a folder hierarchy "news/times-news/". this means that to look at the file in a web browser, I'd go to </p>

<pre>"http://127.0.0.1/news/times-news/2012-03-05.opinionurls.txt"</pre>

<p>The bash script from the previous project was designed to run as a regular user, so it dropped the files in the home directory of the user that ran it. If you want to drop the url-containing text files in a folder on your web server, you'll have to modify the bash script to reflect the change, and then run it as root (take it out of your cron tab, and put it in root's cron tab).</p>

<p>Now that python knows where the file is, we'll open it</p>

<pre>
f = open(filename, 'r')
urls=str(f.read())
</pre>

<p>In the code above, we open the file whose location is stored as the variable "filename"  in read mode as the variable "f". We treat that like a string with the variable "urls". Next we need to connect to the database</p>

<pre>
import MySQLdb
conn = MySQLdb.connect(host="localhost",user="opinionpage",passwd="YOUR-PASSWORD-HERE",db="opinionpage")
cursor = conn.cursor()
</pre>

<p>The previous example imports the necessary module, connects to the specified database with the supplied credentials and gets ready to input data</p>

<pre>
cursor.execute("""INSERT INTO opinionurls VALUES(NULL,CURDATE(),%s)""", (urls))
conn.commit()
</pre>

<p>Notice the string substitution above. If you attempt to put a variable directly into cursor.execute, it will either give you an error or add the string of the variable name to the table depending on if you use quotes or not.</p>

<p>We can put it all together into a script</p>

<pre>
#!/usr/bin/python

import MySQLdb
import datetime

#get the date, use it to create a variable with a link to our file
today=str(datetime.date.today())
filename="/var/www/news/times-news/"+today+".opinionurls.txt"

#open the file
f = open(filename, 'r')
urls=str(f.read())

#connect to the database
conn = MySQLdb.connect (host = "localhost",user = "opinionpage",passwd = "YOUR-PASSWORD-HERE",db = "opinionpage")
cursor = conn.cursor()

#add data from file to table
cursor.execute("""INSERT INTO opinionurls VALUES(NULL,CURDATE(),%s)""", (urls))
conn.commit()
</pre>

<p> Add this script to cron. It uses data from the bash script also in cron, so it's important that the python script runs sometime after the bash script is done. On my server the bash script only takes a few seconds, so it's fine to add the bash script at 5:00AM and the python script at 5:01AM. At this point we have a functional database with new data added to a table on a daily basis, but we still can't do anything with it. In the next section we'll make this data work for us with PHP.</p>


<div id="mcbottom">

<a class="clean" href="03-phpmyadmin.htm">
<div id="mcbottomleftarrow"><img class="center" src="../images/arrowleft.png"/></div>
<div id="mcbottomleftdescription">Back to LAMP Server Administration Project #3 - Install and Configure PHPMyAdmin</div>
</a>

<a class="clean" href="05-php.htm">
<div id="mcbottomrightarrow"><img class="center" src="../images/arrowright.png"/></div>
<div id="mcbottomrightdescription">On to LAMP Server Administration Project #5 - PHP</div>
</a>

</div>





</div>

	</div>


	

	<div id="footer">
		<div id=footertop><p>
			<a href="http://jigsaw.w3.org/css-validator/check/referer">
    			<img style="border:0;width:88px;height:31px"
        		src="http://jigsaw.w3.org/css-validator/images/vcss-blue"
			alt="Valid CSS!" /><br>
			</a>
		</p></div>
		<div id=footerbottom>
			<br>Techprojects &#169; 2012
		</div>
	</div>


</body>

</html>
