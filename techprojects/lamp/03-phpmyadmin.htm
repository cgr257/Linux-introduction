<!DOCTYPE html>
<html>
<head>

<script type="text/javascript" src="../dd.js"></script>

<link rel='stylesheet' href='../style.css'/>
<link href='http://fonts.googleapis.com/css?family=Monofett|Josefin+Sans:400,300|Yanone+Kaffeesatz:400,200|Concert+One' rel='stylesheet' type='text/css'>
<title>TechProjects</title>




</head>

<body>

	<div id="header">
		<div id="headercontent">
			<div id="headerleft"><a class="header" href="index.htm">TechProjects</a></div>
		</div>	
	</div>

	<div id="headernav">
		<div id="headernavcontent">
			
			<!--
			The way that I would prefer to do this is to call an external file via PHP
			so that I don't have to rewrite this once for each page.

			<?php
			$headernavcontent=file_get_contents('nav.html'); 
			echo $headernavcontent
			?>

			-->



<!-- begin navigation menu -->

<ul id="sddm">
    <li><a href="../index.htm">Home</a></li>
    <li><a href="../about.htm">About</a></li>
    <li><a href="../contact.htm" 
        onmouseover="mopen('m3')" 
        onmouseout="mclosetime()">Contact</a>
        <div id="m3" 
            onmouseover="mcancelclosetime()" 
            onmouseout="mclosetime()">
        <a href="../contact.htm">General Contact Information</a>
        <a href="http://www.hirechrisg.com" target="_blank">Online Portfolio</a>
        </div></li>
    <li><a href="../projects.htm" 
        onmouseover="mopen('m4')" 
        onmouseout="mclosetime()">Projects</a>
        <div id="m4" 
            onmouseover="mcancelclosetime()" 
            onmouseout="mclosetime()">
        <a href="../linuxprojects.htm">Linux</a>        
	<a href="../lampprojects.htm">LAMP Server Administration</a>
	<a href="../networkprojects.htm">Networking</a>
        </div></li>
       
</ul>
<div style="clear:both"></div>


<!-- end navigation menu -->




			

		</div>
	</div>

	
	<div id="content">

		

<div class="morecontent">
<h1>LAMP Server Administration Project #3 - Install and Configure PHPMyAdmin</h1>
<p>The "M" in LAMP stands for MySQL, which is a database program that runs as a server. If you plan on managing a lot of data: by generating it, storing it, manipulating it, or whatever else; it makes sense to use a database. I'm running Ubuntu server, which has MySQL installed by default, but if you are using something else, you may need to install it.</p>
<pre>sudo apt-get install mysql-server</pre>
<br><h3>Installing PHPMyAdmin</h3>
<p>Managing MySQL takes a lot of knowledge because the syntax takes some getting used to. Over the command line, it can be very difficult for a beginner to wrap their head around what's actually happening when you issue commands. That's why it can be helpful to have a Web interface. Just like Webmin, PHPMyAdmin allows a system administrator to make changes to the settings of an otherwise difficult to understand CLI program via a GUI. To be clear: I think everyone should learn to do things over the command line, but I also think that starting out that way entirely can be prohibitively intimidating. PHPMyAdmin can be installed with apt-get</p>
<pre>sudo apt-get install phpmyadmin</pre>
<p>In this project we're going to create a database to manage all the data that will be generated with the bash script written in <a href="../linux/04-bashscript.htm">linux project #4</a>. Keep this in mind as we continue.</p>
<br><h3>Setting up a User and Database</h3>
<p>Once PHPMyAdmin is installed, you can get to the web interface by pointing your browser to "127.0.0.1/phpmyadmin", or "your-local-ip/phpmyadmin". Once you're in, we need to create a new user to manage a database, as it's probably not best to run everything as root. Click on "privileges" then "add a new user". Choose whatever username you want, but keep in mind, later we'll be choosing an option that will simultaneously create a database with the same name, so it makes more sense to choose something that describes the database we'll create than it does to pick something like "joe". In other words, the user you're creating here is not a user that you run phpmyadmin with, it's the user that owns and maintains the database we need for this project. I chose the user name "opinionpage". Select "localhost" as the host, and generate a random password. Be sure to write down the password and save it somewhere safe. As far as I know (and I've been in this situation before) you can't recover this password, only reset it, so don't lose it. Make sure to check "create database with same name and grant all privileges", then create the user.<p>

<br><h3>Setting up a Table</h3>
<p>Once you have a new database, we need to set up a table within it. The table will hold data collected by our Bash script, and it won't have to be very complicated. We will only need three columns to hold the data - an auto-incrementing index, a date column, and a column to hold all the URLs generated by the script each day. If we had to visualize what this is going to look like, it would look something like this:</p>
<pre>

     |-----------------------------------------------------------|
     |                opinionpage (our database)                 |
     |-----------------------------------------------------------|
     |       index      |         date         |       urls      |
     |------------------|----------------------|-----------------|
     |        01        |      2012-03-01      | [URLs from 3/1] |
     |------------------|----------------------|-----------------|
     |        02        |      2012-03-02      | [URLs from 3/2] |
     |------------------|----------------------|-----------------|
     |        03        |      2012-03-03      | [URLs from 3/3] |
     |------------------|----------------------|-----------------|
     |        04        |      2012-03-04      | [URLs from 3/4] |
     |------------------|----------------------|-----------------|
     |        05        |      2012-03-05      | [URLs from 3/5] |
     |------------------|----------------------|-----------------|
     |        06        |      2012-03-06      | [URLs from 3/6] |
     |------------------|----------------------|-----------------|
     |        07        |      2012-03-07      | [URLs from 3/7] |
     |-----------------------------------------------------------|



</pre>

<p>Each column is a data category and each row is a new entry. It is all contained within the database called "opinionpage". here is the data you'll need to set up each of those columns. If I don't specify something, then just go with the default or leave it blank.</p>

<pre>


<b>Column 1</b>
column: index
type: int
index: primary
auto increment: checked

<b>Column 2</b>
column: date
type: date

<b>Column 3</b>
column: urls
type:text

</pre>

<p>Click "save" at the bottom. Our database and table is set up and ready to go. There is still nothing in it, so we'll do that with Python in the next project.</p>


<div id="mcbottom">

<a class="clean" href="02-webmin.htm">
<div id="mcbottomleftarrow"><img class="center" src="../images/arrowleft.png"/></div>
<div id="mcbottomleftdescription">Back to LAMP Server Administration Project #2 - Install and configure Webmin</div>
</a>

<a class="clean" href="04-python.htm">
<div id="mcbottomrightarrow"><img class="center" src="../images/arrowright.png"/></div>
<div id="mcbottomrightdescription">On to LAMP Server Administration Project #4 - Python</div>
</a>

</div>





</div>

	</div>


	

	<div id="footer">
		<div id=footertop><p>
			<a href="http://jigsaw.w3.org/css-validator/check/referer">
    			<img style="border:0;width:88px;height:31px"
        		src="http://jigsaw.w3.org/css-validator/images/vcss-blue"
			alt="Valid CSS!" /><br>
			</a>
		</p></div>
		<div id=footerbottom>
			<br>Techprojects &#169; 2012
		</div>
	</div>


</body>

</html>
